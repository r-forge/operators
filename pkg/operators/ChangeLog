2010-06-21
 - R/operator.type.R: refactored as S4 method

2010-06-16
 - R/operator.R:
   Complete refactor to manage operators and types using the options 

 - R/setOperator.R, man/setOperator.Rd: add ability to register 
   operators by a certain type.

 - R/is.operator.R: 
   + is.operator,name-method added.  Uses 'deparse'
   + added more operators from ?Syntax, ordered by priority
   + Changed .operators to options( 'operators' )
   + registerOperator function added.

 - inst/options/options.R: Added options(operators)  

CB: Not sure that creating another options function(operators::options)
is such a great idea.


2010-06-10
 - R/is.operator.R: changed to more robust test using `identical`
 - R.runit.is.operator.R: added to test is.operators, can.operators and 
   as.operator functions.
   - Tests known operator list
   - Tests all other names so that they are not operators
 - DESCRIPTION: reflects utilities as core addition to the project
 - man/operators-package.Rd: updated

2010-06-01
 - ChangeLog: Added this file.

# CODE
 - R/extraOperators.R: renamed from operators.R to allow the operators function to be in R/operators.R
 - R/operators.R: added. 
 - R/as.operators.R: added.
 - R/is.operator.R: added.
 - R/can.operator.R: added.
 

# DOCUMENTATION
 - man/operators.Rd: added.
 - man/is.operator.Rd: added documentation for is.operator, can.operator and as.operator
 - man/operators-package: Removed alias operators as it conflicts with the operators method.

 - NAMESPACE: added exports of is.operator, as.operator, can.operator and operators.


